<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Middle-Out Chat</title>
</head>
<body>
    <style>
        .user-joined {
            color: chartreuse;
            font-size: 0.8rem;
            font-style: italic;
        }
    </style>
    <h1>Middle-Out Chat</h1>
    <h5><a href="https://www.youtube.com/watch?v=Tx3wDTzqDTs" target="_blank">https://www.youtube.com/watch?v=Tx3wDTzqDTs</a></h5>
    <h5><a href="http://localhost:5000" target="_blank">Open 2nd Chat Browser Tab</a></h5>
    <div id="messages">
        <input id="message" type="text" name="message" placeholder="Message" />
        <br />
        <br />
        <button onClick="emitData()">Send</button>
        <br />
        <br />
        <button style="background-color: orange;" onClick="generateTestMessages()">Generate 100k Messages</button>
    </div>
</body>

<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io("http://localhost:5000");

    function emitData(isTest = 0) {
        if(isTest) {
            for (var i = 1; i <= isTest; i++) {
                const message = 'Middle-out stroke count # ' + i;
                if (message.length > 0) {
                    socket.emit("message", { message, from: "<%= username %>" });
                }
            }
        } else {
            const message = document.querySelector("#message").value;
            if (message.length > 0) {
                socket.emit("message", { message, from: "<%= username %>" });
            }
        }
    }

    function generateTestMessages() {
        // return emitData(1000);    // run test with 1,000 messages
        // return emitData(10000);   // run test with 10,000 messages
        // return emitData(50000);   // run test with 50,000 messages
        return emitData(100000);     // run test with 100,000 messages
    }

    socket.on("message", ({ timestamp, from, message }) => {
        const messageElement = document.createElement("p");
        messageElement.innerText = `${from}: ${message}`;
        document.querySelector("#messages").appendChild(messageElement);
    });

    socket.on("joined", username => {
        const element = document.createElement("p");
        element.className = 'user-joined';
        element.innerText = `${username} has joined`;
        document.querySelector("#messages").appendChild(element);
    });
</script>
</html>
